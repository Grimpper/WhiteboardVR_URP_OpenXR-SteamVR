// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;
float _Resolution;
float _Time;
float2 _MousePosUV;

float asymptToOne(float x)
{
    return -exp(-x) + 1.0;
}

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    const int2 _MousePos = _MousePosUV * _Resolution;
    float dist = distance(float2(id.xy), float2(_MousePos));


    if(dist < 50)
    {
        float4 baseColor = Result[id.xy];
        float4 color = float4(1, 0, 0, 0);
        float4 blendResult = color * (1 - dist / 50)  + baseColor * dist / 50.0f ;

        Result[id.xy] = blendResult;
    }
}
